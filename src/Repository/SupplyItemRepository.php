<?php

namespace App\Repository;

/**
 * SupplyItemRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SupplyItemRepository extends \Doctrine\ORM\EntityRepository
{
	public function findSupplyItems($id, $user)
	{
	    return $this->getEntityManager()
	        ->createQuery(
	            'SELECT si.id as id, si.quantity as quantity, si.amount as amount, s.name as supply_name, s.id as supply_id, sr.name as supplier, s.date as date, st.name as item_name, st.unit as unit FROM App\Entity\SupplyItem si, App\Entity\Supplier sr, App\Entity\Supply s, App\Entity\Stock st WHERE si.stock = st.id AND si.supplyId = s.id AND s.supplier = sr.id AND s.id = :id AND si.userId = :user'
	        )->setParameter('id', $id)
	        ->setParameter('user', $user)
	        ->getResult();
	}

	/**
	 * Find all supplies of a given stock item
	 *
	 * @param int $id Stock ID
	 * @param int $user User ID
	 **/
	public function findSupplyItemsByStock($id, $user)
	{
		return $this->getEntityManager()
		    ->createQuery(
		        'SELECT si.id as id, si.quantity as quantity, si.amount as amount, s.name as supply_name, s.id as supply_id, sr.name as supplier, sr.id as supplier_id, s.date as date FROM App\Entity\SupplyItem si, App\Entity\Supplier sr, App\Entity\Supply s, App\Entity\Stock st WHERE si.stock = st.id AND si.supplyId = s.id AND s.supplier = sr.id AND st.id = :id AND si.userId = :user'
		    )->setParameter('id', $id)
		    ->setParameter('user', $user)
		    ->getResult();
	}

	public function findAllSupplyItem($user)
	{
	    return $this->getEntityManager()
	        ->createQuery(
	            'SELECT si.id as id, si.quantity as quantity, si.amount as amount, s.name as supply_name, s.id as supply_id, sr.name as supplier, s.date as date, st.name as item_name FROM App\Entity\SupplyItem si, App\Entity\Supplier sr, App\Entity\Supply s, App\Entity\Stock st WHERE si.stock = st.id AND si.supplyId = s.id AND s.supplier = sr.id AND si.userId = :user'
	        )->setParameter('user', $user)
	        ->getResult();
	}

	public function findSupply($id, $user)
	{
	    return $this->getEntityManager()
	        ->createQuery(
	            'SELECT si.id as id, si.quantity as quantity, si.amount as amount, s.name as supply_name, s.id as supply_id, sr.name as supplier, s.date as date, st.name as item_name FROM App\Entity\SupplyItem si, App\Entity\Supplier sr, App\Entity\Supply s, App\Entity\Stock st WHERE si.stock = st.id AND si.supplyId = s.id AND s.supplier = sr.id AND s.id = :id AND si.userId = :user'
	        )->setParameter('id', $id)
	        ->setParameter('user', $user)
	        ->getResult();
	}

	public function findBySupply($id, $user)
	{
	    return $this->getEntityManager()
	        ->createQuery(
	            'SELECT s FROM App\Entity\SupplyItem s WHERE s.supplyId = :id AND s.userId = :user'
	        )->setParameter('id', $id)
	        ->setParameter('user', $user)
	        ->getResult();
	}

	/**
	 * Delete Supply items belonging to a supply
	 * @param int $id Supply ID
	 * @param int $user User ID
	 */
	public function deleteSupplyItems($id, $user)
	{
	    return $this->getEntityManager()
	        ->createQuery(
	            'DELETE FROM App\Entity\SupplyItem s WHERE s.supplyId = :id AND s.userId = :user'
	        )->setParameter('id', $id)
	        ->setParameter('user', $user)
	        ->getResult();
	}

	/**
	 * Delete Supply items belonging to a supply
	 * @param int $id Supply ID
	 * @param int $user User ID
	 */
	public function suppierItems($id, $user)
	{
	    return $this->getEntityManager()
	        ->createQuery(
	            'SELECT si.id as id, si.stock as stock, si.quantity as quantity FROM App\Entity\SupplyItem si, App\Entity\Supplier sr, App\Entity\Supply s WHERE si.supplyId = s.id AND s.supplier = sr.id AND sr.id = :id AND s.userId = :user'
	        )->setParameter('id', $id)
	        ->setParameter('user', $user)
	        ->getResult();
	}

	public function findBySupplyStock($id, $user)
	{
	    return $this->getEntityManager()
	        ->createQuery(
	            'SELECT s.id as id, s.quantity as quantity, s.amount as amount, st.name as name FROM App\Entity\SupplyItem s, App\Entity\Stock st WHERE s.supplyId = :id AND s.userId = :user AND s.stock = st.id'
	        )->setParameter('id', $id)
	        ->setParameter('user', $user)
	        ->getResult();
	}

	/**
	 * Find supply items by stock/inventory
	 *
	 * @param int $id Stock ID
	 * @param int $user User ID
	 **/
	public function findByStock($stockid, $user)
	{
		return $this->getEntityManager()
		    ->createQuery(
		        'SELECT si.id as id, si.quantity as quantity, si.amount as amount, st.name as name, s.name as supply_name, s.id as supply_id FROM App\Entity\SupplyItem si, App\Entity\Stock st, App\Entity\Supply s WHERE si.stock = :id AND si.supplyId = s.id AND si.userId = :user AND si.stock = st.id'
		    )->setParameter('id', $id)
		    ->setParameter('user', $user)
		    ->getResult();
	}
}
